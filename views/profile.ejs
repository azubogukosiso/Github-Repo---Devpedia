<!DOCTYPE html>
<html lang="en">
    <%- include('./partials/head.ejs') %>
<body>

    <%- include('./partials/nav.ejs') %>

    <div class="container">
        <h2 class="my-5 text-center">Profile</h2>

        <% if (user) { %>
            <% if (user.profile_image == '{}'){ %>
                <div class="image-border mx-auto mb-4">
                    <img class="image" src="" >
                </div>
            <% } else { %>    
                <div class="image-border mx-auto mb-4">
                    <img class="image" src="data:image/<%= user.profile_image.contentType %>;base64,
                    <%= user.profile_image.data.toString('base64') %>">
                </div>
            <% } %>

            <form style="flex-direction: column;" class="username-form text-center mb-3 d-flex align-items-center justify-content-center">
                <div>
                    <span class="me-2">
                        Username: <input type="text" name="username" value="<%= user.username %>" required>
                    </span>
                    <button class="rounded btn-primary my-2">change</button>
                </div>
                <div style="transition: 0.05s;" class="username-msg-area rounded w-50 mx-auto text-center"></div>
            </form>

            <form style="flex-direction: column;" class="email-form text-center mb-3 d-flex align-items-center justify-content-center">
                <div>
                    <span class="me-2">
                        User email: <input type="text" name="email" value="<%= user.email %>" required>
                    </span>
                    <button class="rounded btn-primary my-2">change</button>
                </div>    
                <div style="transition: 0.05s;" class="email-msg-area rounded w-50 mx-auto text-center"></div>
            </form>
            
            <form style="flex-direction: column;" class="password-form text-center mb-3 d-flex align-items-center justify-content-center">
                <div>
                    <span class="me-2">
                        Enter a new password: <input type="password" name="password" required>
                    </span>
                    <button class="rounded btn-primary my-2">change</button>
                </div>
                <div style="transition: 0.05s;" class="password-msg-area rounded w-50 mx-auto text-center"></div>
            </form>
        <% } %>

        <a class="User-ID-Prov btn btn-primary" hidden data-doc="<%= user._id %>"></a>
    </div>

    <%- include('./partials/footer.ejs') %>

    <script>
        const usernameForm = document.querySelector('form.username-form');
        const emailForm = document.querySelector('form.email-form');
        const passwordForm = document.querySelector('form.password-form');
        const userIdProv = document.querySelector('a.User-ID-Prov');
        const usernameMsgArea = document.querySelector('div.username-msg-area');
        const emailMsgArea = document.querySelector('div.email-msg-area');
        const passwordMsgArea = document.querySelector('div.password-msg-area');

        // username change
        usernameForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const response = await fetch(`/profile/${userIdProv.dataset.doc}/changeusername`, {
                method: 'POST',
                body: new FormData(usernameForm)
            });
            const data = await response.json();

            if (data.info) {
                usernameMsgArea.classList.add('alert-warning', 'border', 'border-warning', 'py-2', 'my-3');
                usernameMsgArea.innerHTML = data.info;

                setTimeout(() => {
                    usernameMsgArea.classList.remove('alert-warning', 'border', 'border-warning', 'py-2', 'my-3');
                    usernameMsgArea.innerHTML = '';
                }, 5000)
            }

            if (data.error) {
                console.log(data.error);
            }

            if (data.success) {
                usernameMsgArea.classList.add('alert-success', 'border', 'border-success', 'py-2', 'my-3');
                usernameMsgArea.innerHTML = data.success;

                setTimeout(() => {
                    usernameMsgArea.classList.remove('alert-success', 'border', 'border-success', 'py-2', 'my-3');
                    usernameMsgArea.innerHTML = '';
                }, 5000)
            }
        });



        // email change
        emailForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            const response = await fetch(`/profile/${userIdProv.dataset.doc}/changeuseremail`, {
                method: 'POST',
                body: new FormData(emailForm)
            });
            const data = await response.json();

            if (data.info) {
                emailMsgArea.classList.add('alert-warning', 'border', 'border-warning', 'py-2', 'my-3');
                emailMsgArea.innerHTML = data.info;

                setTimeout(() => {
                    emailMsgArea.classList.remove('alert-warning', 'border', 'border-warning', 'py-2', 'my-3');
                    emailMsgArea.innerHTML = '';
                }, 5000)
            }

            if (data.error) {
                console.log(data.error);
            }

            if (data.success) {
                emailMsgArea.classList.add('alert-success', 'border', 'border-success', 'py-2', 'my-3');
                emailMsgArea.innerHTML = data.success;

                setTimeout(() => {
                    emailMsgArea.classList.remove('alert-success', 'border', 'border-success', 'py-2', 'my-3');
                    emailMsgArea.innerHTML = '';
                }, 5000)
            }
        });

        // password change
        passwordForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            const response = await fetch(`profile/${userIdProv.dataset.doc}/changeuserpassword`, {
                method: 'PUT',
                body: new FormData(passwordForm)
            });
            const data = await response.json();

            if (data.info) {
                passwordMsgArea.classList.add('alert-warning', 'border', 'border-warning', 'py-2', 'my-3');
                passwordMsgArea.innerHTML = data.info;

                setTimeout(() => {
                    passwordMsgArea.classList.remove('alert-warning', 'border', 'border-warning', 'py-2', 'my-3');
                    passwordMsgArea.innerHTML = '';
                }, 5000)
            }

            if (data.error) {
                console.log(data.error);
            }

            if (data.success) {
                passwordMsgArea.classList.add('alert-success', 'border', 'border-success', 'py-2', 'my-3');
                passwordMsgArea.innerHTML = data.success;

                setTimeout(() => {
                    passwordMsgArea.classList.remove('alert-success', 'border', 'border-success', 'py-2', 'my-3');
                    passwordMsgArea.innerHTML = '';
                }, 5000)
            }
        });
    </script>
</body>
</html>